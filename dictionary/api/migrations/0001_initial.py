# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-06 08:31
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('text', models.CharField(max_length=1000)),
                ('slug', models.SlugField(max_length=1000)),
                ('start_position', models.IntegerField()),
                ('end_position', models.IntegerField()),
            ],
            options={
                'ordering': ['text'],
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=1000)),
                ('slug', models.SlugField(max_length=1000)),
                ('also_known_as', models.ManyToManyField(blank=True, related_name='_artist_also_known_as_+', to='api.Artist')),
            ],
            options={
                'ordering': ('name', 'created'),
            },
        ),
        migrations.CreateModel(
            name='Dictionary',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(max_length=500)),
                ('name', models.CharField(max_length=1000)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dictionaries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name', 'created'),
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=1000)),
                ('slug', models.SlugField(max_length=1000)),
                ('broader', models.ManyToManyField(blank=True, related_name='narrower', to='api.Domain')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domains', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Example',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('slug', models.CharField(max_length=1000)),
                ('text', models.CharField(max_length=1000)),
                ('artist', models.ManyToManyField(related_name='_example_artist_+', to='api.Artist')),
                ('feat_artist', models.ManyToManyField(blank=True, related_name='_example_feat_artist_+', to='api.Artist')),
            ],
            options={
                'ordering': ['text'],
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=1000)),
                ('full_name', models.CharField(max_length=1000)),
                ('slug', models.CharField(max_length=1000)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('artists', models.ManyToManyField(blank=True, related_name='_place_artists_+', to='api.Artist')),
                ('contains', models.ManyToManyField(blank=True, related_name='within', to='api.Place')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name', 'created'),
            },
        ),
        migrations.CreateModel(
            name='SemanticClass',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=1000)),
                ('slug', models.SlugField(max_length=1000)),
                ('broader', models.ManyToManyField(blank=True, related_name='narrower', to='api.SemanticClass')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semantic_classes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name_plural': 'Semantic Classes',
            },
        ),
        migrations.CreateModel(
            name='Sense',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('headword', models.CharField(max_length=500)),
                ('headword_slug', models.SlugField(max_length=500)),
                ('published', models.BooleanField(default=False)),
                ('part_of_speech', models.CharField(choices=[('adjectival_phrase', 'adjectival phrase'), ('adjective', 'adjective'), ('adverb', 'adverb'), ('adverbial_phrase', 'adverbial_phrase'), ('combining_form', 'combining form'), ('interjection', 'interjection'), ('noun', 'noun'), ('phrase', 'phrase'), ('preposition', 'preposition'), ('prepositional_phrase', 'prepositional phrase'), ('intransitive_verb', 'intransitive verb'), ('intransitive_phrasal_verb', 'intransitive phrasal verb'), ('transitive verb', 'transitive verb'), ('transitive phrasal verb', 'transitive phrasal verb'), ('verb', 'verb')], max_length=500)),
                ('definition', models.CharField(default='__stub_definition__', max_length=2000)),
                ('etymology', models.CharField(blank=True, max_length=2000, null=True)),
                ('notes', models.CharField(blank=True, max_length=2000, null=True)),
                ('antonyms', models.ManyToManyField(blank=True, related_name='_sense_antonyms_+', to='api.Sense')),
                ('derivatives', models.ManyToManyField(blank=True, related_name='derives_from', to='api.Sense')),
                ('dictionaries', models.ManyToManyField(blank=True, related_name='_sense_dictionaries_+', to='api.Dictionary')),
                ('domains', models.ManyToManyField(blank=True, related_name='_sense_domains_+', to='api.Domain')),
                ('hypernyms', models.ManyToManyField(blank=True, related_name='hyponyms', to='api.Sense')),
                ('meronyms', models.ManyToManyField(blank=True, related_name='holonyms', to='api.Sense')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='senses', to=settings.AUTH_USER_MODEL)),
                ('semantic_classes', models.ManyToManyField(blank=True, related_name='_sense_semantic_classes_+', to='api.SemanticClass')),
                ('synonyms', models.ManyToManyField(blank=True, related_name='_sense_synonyms_+', to='api.Sense')),
            ],
            options={
                'ordering': ('headword', 'created'),
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('slug', models.CharField(max_length=1000)),
                ('title', models.CharField(max_length=1000)),
                ('release_date', models.DateField()),
                ('release_date_string', models.CharField(max_length=10)),
                ('album', models.CharField(max_length=1000)),
                ('lyrics', models.TextField(blank=True, null=True)),
                ('release_date_verified', models.BooleanField(default=False)),
                ('feat_artist', models.ManyToManyField(blank=True, related_name='_song_feat_artist_+', to='api.Artist')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs', to=settings.AUTH_USER_MODEL)),
                ('primary_artist', models.ManyToManyField(related_name='_song_primary_artist_+', to='api.Artist')),
            ],
            options={
                'ordering': ['title', 'album'],
            },
        ),
        migrations.AddField(
            model_name='semanticclass',
            name='senses',
            field=models.ManyToManyField(blank=True, related_name='_semanticclass_senses_+', to='api.Sense'),
        ),
        migrations.AddField(
            model_name='example',
            name='from_song',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examples', to='api.Song'),
        ),
        migrations.AddField(
            model_name='example',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examples', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='domain',
            name='senses',
            field=models.ManyToManyField(blank=True, related_name='_domain_senses_+', to='api.Sense'),
        ),
        migrations.AddField(
            model_name='dictionary',
            name='senses',
            field=models.ManyToManyField(blank=True, related_name='_dictionary_senses_+', to='api.Sense'),
        ),
        migrations.AddField(
            model_name='artist',
            name='featured_examples',
            field=models.ManyToManyField(blank=True, related_name='_artist_featured_examples_+', to='api.Example'),
        ),
        migrations.AddField(
            model_name='artist',
            name='featured_songs',
            field=models.ManyToManyField(blank=True, related_name='_artist_featured_songs_+', to='api.Song'),
        ),
        migrations.AddField(
            model_name='artist',
            name='members',
            field=models.ManyToManyField(blank=True, related_name='member_of', to='api.Artist'),
        ),
        migrations.AddField(
            model_name='artist',
            name='origin',
            field=models.ManyToManyField(blank=True, related_name='_artist_origin_+', to='api.Place'),
        ),
        migrations.AddField(
            model_name='artist',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artists', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='artist',
            name='primary_examples',
            field=models.ManyToManyField(blank=True, related_name='_artist_primary_examples_+', to='api.Example'),
        ),
        migrations.AddField(
            model_name='artist',
            name='primary_songs',
            field=models.ManyToManyField(blank=True, related_name='_artist_primary_songs_+', to='api.Song'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='artist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to='api.Artist'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='example',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to='api.Example'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='annotation',
            name='place',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to='api.Place'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='rhymes',
            field=models.ManyToManyField(blank=True, related_name='_annotation_rhymes_+', to='api.Annotation'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='sense',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to='api.Sense'),
        ),
    ]
